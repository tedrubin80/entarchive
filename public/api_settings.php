<?php
/**
 * API Settings Management Page
 * File: public/api_settings.php
 * Manage all API keys and configuration through web interface
 */
error_reporting(E_ALL);
ini_set('display_errors', 1);

session_start();

// Check authentication
if (!isset($_SESSION['admin_logged_in']) || !$_SESSION['admin_logged_in']) {
    header("Location: user_login.php");
    exit;
}

// Helper function to safely include config
function safeInclude($file) {
    $paths = [
        $file,
        __DIR__ . '/' . $file,
        __DIR__ . '/../' . $file,
        '../' . $file
    ];
    
    foreach ($paths as $path) {
        if (file_exists($path)) {
            require_once $path;
            return true;
        }
    }
    return false;
}

// Load configuration
safeInclude('config.php');

$message = '';
$messageType = '';
$testResults = [];

// API Configuration file path
$apiConfigFile = dirname(__DIR__) . '/config/api_keys.php';

// Create config directory if it doesn't exist
$configDir = dirname($apiConfigFile);
if (!is_dir($configDir)) {
    mkdir($configDir, 0755, true);
}

// Load current API settings
function loadAPISettings($file) {
    if (!file_exists($file)) {
        return [
            'OMDB_API_KEY' => '',
            'TMDB_API_KEY' => '',
            'GOOGLE_BOOKS_API_KEY' => '',
            'IGDB_API_KEY' => '',
            'DISCOGS_TOKEN' => '',
            'ENABLE_API_CACHING' => true,
            'API_CACHE_DURATION' => 604800,
            'MAX_POSTER_WIDTH' => 500,
            'MAX_POSTER_HEIGHT' => 750,
            'POSTER_QUALITY' => 85
        ];
    }
    
    $content = file_get_contents($file);
    $settings = [];
    
    // Parse define statements
    preg_match_all("/define\('([^']+)',\s*'([^']*)'\);/", $content, $matches);
    for ($i = 0; $i < count($matches[1]); $i++) {
        $settings[$matches[1][$i]] = $matches[2][$i];
    }
    
    // Parse boolean values
    preg_match_all("/define\('([^']+)',\s*(true|false)\);/", $content, $boolMatches);
    for ($i = 0; $i < count($boolMatches[1]); $i++) {
        $settings[$boolMatches[1][$i]] = $boolMatches[2][$i] === 'true';
    }
    
    // Parse numeric values
    preg_match_all("/define\('([^']+)',\s*(\d+)\);/", $content, $numMatches);
    for ($i = 0; $i < count($numMatches[1]); $i++) {
        $settings[$numMatches[1][$i]] = (int)$numMatches[2][$i];
    }
    
    return $settings;
}

// Save API settings
function saveAPISettings($file, $settings) {
    $content = "<?php\n";
    $content .= "/**\n";
    $content .= " * API Configuration\n";
    $content .= " * Generated by API Settings Manager\n";
    $content .= " * Last updated: " . date('Y-m-d H:i:s') . "\n";
    $content .= " */\n\n";
    
    // String values
    $stringKeys = ['OMDB_API_KEY', 'TMDB_API_KEY', 'GOOGLE_BOOKS_API_KEY', 'IGDB_API_KEY', 'DISCOGS_TOKEN'];
    foreach ($stringKeys as $key) {
        $value = $settings[$key] ?? '';
        $content .= "define('{$key}', '{$value}');\n";
    }
    
    $content .= "\n// Configuration Settings\n";
    
    // Boolean values
    $boolKeys = ['ENABLE_API_CACHING'];
    foreach ($boolKeys as $key) {
        $value = isset($settings[$key]) && $settings[$key] ? 'true' : 'false';
        $content .= "define('{$key}', {$value});\n";
    }
    
    // Numeric values
    $numKeys = ['API_CACHE_DURATION', 'MAX_POSTER_WIDTH', 'MAX_POSTER_HEIGHT', 'POSTER_QUALITY'];
    foreach ($numKeys as $key) {
        $value = $settings[$key] ?? 0;
        $content .= "define('{$key}', {$value});\n";
    }
    
    $content .= "\n// Auto-generated constants\n";
    $content .= "define('POSTER_UPLOAD_PATH', dirname(__DIR__) . '/uploads/posters/');\n";
    $content .= "define('API_CACHE_PATH', dirname(__DIR__) . '/cache/api/');\n";
    $content .= "?>";
    
    return file_put_contents($file, $content) !== false;
}

// Test API key function
function testAPIKey($service, $apiKey) {
    if (empty($apiKey)) {
        return ['success' => false, 'message' => 'API key is empty'];
    }
    
    switch ($service) {
        case 'omdb':
            $url = "http://www.omdbapi.com/?apikey={$apiKey}&t=Titanic";
            break;
        case 'tmdb':
            $url = "https://api.themoviedb.org/3/configuration?api_key={$apiKey}";
            break;
        case 'google_books':
            $url = "https://www.googleapis.com/books/v1/volumes?key={$apiKey}&q=harry+potter&maxResults=1";
            break;
        case 'igdb':
            // IGDB requires special handling with bearer token
            return ['success' => false, 'message' => 'IGDB testing requires special setup'];
        case 'discogs':
            $url = "https://api.discogs.com/database/search?token={$apiKey}&q=Beatles&type=artist";
            break;
        default:
            return ['success' => false, 'message' => 'Unknown service'];
    }
    
    $context = stream_context_create([
        'http' => [
            'timeout' => 10,
            'user_agent' => 'MediaCollection/1.0'
        ]
    ]);
    
    $response = @file_get_contents($url, false, $context);
    
    if ($response === false) {
        return ['success' => false, 'message' => 'Failed to connect to API'];
    }
    
    $data = json_decode($response, true);
    
    if ($data === null) {
        return ['success' => false, 'message' => 'Invalid JSON response'];
    }
    
    // Check for common error patterns
    if (isset($data['Error'])) {
        return ['success' => false, 'message' => $data['Error']];
    }
    
    if (isset($data['error'])) {
        return ['success' => false, 'message' => $data['error']['message'] ?? 'API Error'];
    }
    
    return ['success' => true, 'message' => 'API key is working correctly'];
}

// Load current settings
$currentSettings = loadAPISettings($apiConfigFile);

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $action = $_POST['action'] ?? '';
    
    switch ($action) {
        case 'save_settings':
            $newSettings = [
                'OMDB_API_KEY' => trim($_POST['omdb_key'] ?? ''),
                'TMDB_API_KEY' => trim($_POST['tmdb_key'] ?? ''),
                'GOOGLE_BOOKS_API_KEY' => trim($_POST['google_books_key'] ?? ''),
                'IGDB_API_KEY' => trim($_POST['igdb_key'] ?? ''),
                'DISCOGS_TOKEN' => trim($_POST['discogs_token'] ?? ''),
                'ENABLE_API_CACHING' => isset($_POST['enable_caching']),
                'API_CACHE_DURATION' => (int)($_POST['cache_duration'] ?? 604800),
                'MAX_POSTER_WIDTH' => (int)($_POST['poster_width'] ?? 500),
                'MAX_POSTER_HEIGHT' => (int)($_POST['poster_height'] ?? 750),
                'POSTER_QUALITY' => (int)($_POST['poster_quality'] ?? 85)
            ];
            
            if (saveAPISettings($apiConfigFile, $newSettings)) {
                $currentSettings = $newSettings;
                $message = "API settings saved successfully!";
                $messageType = "success";
            } else {
                $message = "Failed to save API settings. Please check file permissions.";
                $messageType = "error";
            }
            break;
            
        case 'test_api':
            $service = $_POST['service'] ?? '';
            $apiKey = $_POST['api_key'] ?? '';
            $testResults[$service] = testAPIKey($service, $apiKey);
            break;
            
        case 'clear_cache':
            $cacheDir = dirname(__DIR__) . '/cache/api/';
            if (is_dir($cacheDir)) {
                $files = glob($cacheDir . '*');
                $deletedCount = 0;
                foreach ($files as $file) {
                    if (is_file($file) && unlink($file)) {
                        $deletedCount++;
                    }
                }
                $message = "Cleared {$deletedCount} cache files.";
                $messageType = "success";
            } else {
                $message = "Cache directory not found.";
                $messageType = "info";
            }
            break;
    }
}

$currentUser = $_SESSION['admin_user'] ?? 'User';
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Settings - Media Collection</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            line-height: 1.6;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }
        
        .header h1 {
            color: #333;
            font-size: 1.8rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .nav-links {
            display: flex;
            gap: 1rem;
        }
        
        .nav-link {
            color: #666;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #333;
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            display: inline-block;
        }
        
        .btn-primary {
            background: #007bff;
            color: white;
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .btn-success {
            background: #28a745;
            color: white;
        }
        
        .btn-danger {
            background: #dc3545;
            color: white;
        }
        
        .btn-warning {
            background: #ffc107;
            color: #212529;
        }
        
        .btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        .container {
            max-width: 1000px;
            margin: 2rem auto;
            padding: 0 2rem;
        }
        
        .settings-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }
        
        .settings-card h2 {
            color: #333;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e0e0e0;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr auto auto;
            gap: 1rem;
            align-items: end;
        }
        
        .api-key-row {
            display: grid;
            grid-template-columns: 1fr auto auto;
            gap: 1rem;
            align-items: end;
            margin-bottom: 1rem;
        }
        
        .message {
            padding: 1rem;
            border-radius: 6px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .message.info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        
        .api-service {
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .api-service h3 {
            color: #333;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .api-description {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }
        
        .test-result {
            padding: 0.5rem;
            border-radius: 4px;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }
        
        .test-result.success {
            background: #d4edda;
            color: #155724;
        }
        
        .test-result.error {
            background: #f8d7da;
            color: #721c24;
        }
        
        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .checkbox-group input[type="checkbox"] {
            width: auto;
        }
        
        .info-box {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 1rem;
            margin: 1rem 0;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .settings-section {
            border-bottom: 1px solid #eee;
            padding-bottom: 2rem;
            margin-bottom: 2rem;
        }
        
        .settings-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        @media (max-width: 768px) {
            .form-row,
            .api-key-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>🔑 API Settings</h1>
        <div class="nav-links">
            <a href="enhanced_media_dashboard.php" class="nav-link">🏠 Dashboard</a>
            <a href="user_settings.php" class="nav-link">⚙️ Settings</a>
            <a href="logout.php" class="btn btn-danger">🚪 Logout</a>
        </div>
    </header>

    <div class="container">
        <?php if ($message): ?>
        <div class="message <?php echo $messageType; ?>">
            <?php if ($messageType === 'success'): ?>✅<?php elseif ($messageType === 'error'): ?>❌<?php else: ?>ℹ️<?php endif; ?>
            <?php echo htmlspecialchars($message); ?>
        </div>
        <?php endif; ?>

        <!-- API Keys Configuration -->
        <div class="settings-card">
            <h2>🔑 API Keys Configuration</h2>
            
            <form method="POST">
                <input type="hidden" name="action" value="save_settings">
                
                <!-- OMDB API -->
                <div class="api-service">
                    <h3>🎬 OMDB API (Movies & TV Shows)</h3>
                    <div class="api-description">
                        Get movie and TV show metadata, posters, and ratings. 
                        <a href="http://www.omdbapi.com/apikey.aspx" target="_blank">Get your free API key here</a>
                    </div>
                    
                    <div class="api-key-row">
                        <div class="form-group">
                            <label for="omdb_key">API Key</label>
                            <input type="password" id="omdb_key" name="omdb_key" 
                                   value="<?php echo htmlspecialchars($currentSettings['OMDB_API_KEY'] ?? ''); ?>" 
                                   placeholder="Enter your OMDB API key">
                        </div>
                        <button type="button" class="btn btn-secondary" onclick="togglePassword('omdb_key')">👁️ Show</button>
                        <button type="button" class="btn btn-warning" onclick="testAPI('omdb', 'omdb_key')">🧪 Test</button>
                    </div>
                    
                    <?php if (isset($testResults['omdb'])): ?>
                        <div class="test-result <?php echo $testResults['omdb']['success'] ? 'success' : 'error'; ?>">
                            <?php echo htmlspecialchars($testResults['omdb']['message']); ?>
                        </div>
                    <?php endif; ?>
                </div>

                <!-- TMDB API -->
                <div class="api-service">
                    <h3>🎭 TMDB API (Enhanced Movie Data)</h3>
                    <div class="api-description">
                        The Movie Database provides more detailed movie information and multiple poster options.
                        <a href="https://www.themoviedb.org/settings/api" target="_blank">Get your free API key here</a>
                    </div>
                    
                    <div class="api-key-row">
                        <div class="form-group">
                            <label for="tmdb_key">API Key</label>
                            <input type="password" id="tmdb_key" name="tmdb_key" 
                                   value="<?php echo htmlspecialchars($currentSettings['TMDB_API_KEY'] ?? ''); ?>" 
                                   placeholder="Enter your TMDB API key">
                        </div>
                        <button type="button" class="btn btn-secondary" onclick="togglePassword('tmdb_key')">👁️ Show</button>
                        <button type="button" class="btn btn-warning" onclick="testAPI('tmdb', 'tmdb_key')">🧪 Test</button>
                    </div>
                    
                    <?php if (isset($testResults['tmdb'])): ?>
                        <div class="test-result <?php echo $testResults['tmdb']['success'] ? 'success' : 'error'; ?>">
                            <?php echo htmlspecialchars($testResults['tmdb']['message']); ?>
                        </div>
                    <?php endif; ?>
                </div>

                <!-- Google Books API -->
                <div class="api-service">
                    <h3>📚 Google Books API</h3>
                    <div class="api-description">
                        Search for books, get cover images, and detailed book information.
                        <a href="https://developers.google.com/books/docs/v1/using#APIKey" target="_blank">Get your free API key here</a>
                    </div>
                    
                    <div class="api-key-row">
                        <div class="form-group">
                            <label for="google_books_key">API Key</label>
                            <input type="password" id="google_books_key" name="google_books_key" 
                                   value="<?php echo htmlspecialchars($currentSettings['GOOGLE_BOOKS_API_KEY'] ?? ''); ?>" 
                                   placeholder="Enter your Google Books API key">
                        </div>
                        <button type="button" class="btn btn-secondary" onclick="togglePassword('google_books_key')">👁️ Show</button>
                        <button type="button" class="btn btn-warning" onclick="testAPI('google_books', 'google_books_key')">🧪 Test</button>
                    </div>
                    
                    <?php if (isset($testResults['google_books'])): ?>
                        <div class="test-result <?php echo $testResults['google_books']['success'] ? 'success' : 'error'; ?>">
                            <?php echo htmlspecialchars($testResults['google_books']['message']); ?>
                        </div>
                    <?php endif; ?>
                </div>

                <!-- IGDB API -->
                <div class="api-service">
                    <h3>🎮 IGDB API (Video Games)</h3>
                    <div class="api-description">
                        Internet Game Database for video game metadata and cover art.
                        <a href="https://api.igdb.com/" target="_blank">Get your API credentials here</a>
                    </div>
                    
                    <div class="api-key-row">
                        <div class="form-group">
                            <label for="igdb_key">API Key</label>
                            <input type="password" id="igdb_key" name="igdb_key" 
                                   value="<?php echo htmlspecialchars($currentSettings['IGDB_API_KEY'] ?? ''); ?>" 
                                   placeholder="Enter your IGDB API key">
                        </div>
                        <button type="button" class="btn btn-secondary" onclick="togglePassword('igdb_key')">👁️ Show</button>
                        <button type="button" class="btn btn-warning" onclick="testAPI('igdb', 'igdb_key')">🧪 Test</button>
                    </div>
                    
                    <div class="info-box">
                        <strong>Note:</strong> IGDB requires special authentication setup. Testing may not work until full implementation.
                    </div>
                </div>

                <!-- Discogs API -->
                <div class="api-service">
                    <h3>🎵 Discogs API (Music)</h3>
                    <div class="api-description">
                        Music database for albums, artists, and cover art information.
                        <a href="https://www.discogs.com/settings/developers" target="_blank">Get your API token here</a>
                    </div>
                    
                    <div class="api-key-row">
                        <div class="form-group">
                            <label for="discogs_token">API Token</label>
                            <input type="password" id="discogs_token" name="discogs_token" 
                                   value="<?php echo htmlspecialchars($currentSettings['DISCOGS_TOKEN'] ?? ''); ?>" 
                                   placeholder="Enter your Discogs API token">
                        </div>
                        <button type="button" class="btn btn-secondary" onclick="togglePassword('discogs_token')">👁️ Show</button>
                        <button type="button" class="btn btn-warning" onclick="testAPI('discogs', 'discogs_token')">🧪 Test</button>
                    </div>
                    
                    <?php if (isset($testResults['discogs'])): ?>
                        <div class="test-result <?php echo $testResults['discogs']['success'] ? 'success' : 'error'; ?>">
                            <?php echo htmlspecialchars($testResults['discogs']['message']); ?>
                        </div>
                    <?php endif; ?>
                </div>

                <div class="settings-section">
                    <h3>⚙️ API Configuration</h3>
                    
                    <div class="form-row">
                        <div class="checkbox-group">
                            <input type="checkbox" id="enable_caching" name="enable_caching" 
                                   <?php echo ($currentSettings['ENABLE_API_CACHING'] ?? true) ? 'checked' : ''; ?>>
                            <label for="enable_caching">Enable API Response Caching</label>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="cache_duration">Cache Duration (seconds)</label>
                        <select id="cache_duration" name="cache_duration">
                            <?php
                            $durations = [
                                3600 => '1 Hour',
                                21600 => '6 Hours', 
                                86400 => '1 Day',
                                604800 => '1 Week',
                                2592000 => '1 Month'
                            ];
                            $current = $currentSettings['API_CACHE_DURATION'] ?? 604800;
                            foreach ($durations as $value => $label):
                            ?>
                                <option value="<?php echo $value; ?>" <?php echo $current == $value ? 'selected' : ''; ?>>
                                    <?php echo $label; ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                    </div>
                </div>

                <div class="settings-section">
                    <h3>🖼️ Poster Settings</h3>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="poster_width">Max Poster Width (px)</label>
                            <input type="number" id="poster_width" name="poster_width" 
                                   value="<?php echo $currentSettings['MAX_POSTER_WIDTH'] ?? 500; ?>" 
                                   min="100" max="2000">
                        </div>
                        
                        <div class="form-group">
                            <label for="poster_height">Max Poster Height (px)</label>
                            <input type="number" id="poster_height" name="poster_height" 
                                   value="<?php echo $currentSettings['MAX_POSTER_HEIGHT'] ?? 750; ?>" 
                                   min="100" max="3000">
                        </div>
                        
                        <div class="form-group">
                            <label for="poster_quality">JPEG Quality (%)</label>
                            <input type="number" id="poster_quality" name="poster_quality" 
                                   value="<?php echo $currentSettings['POSTER_QUALITY'] ?? 85; ?>" 
                                   min="10" max="100">
                        </div>
                    </div>
                </div>

                <div style="display: flex; gap: 1rem; margin-top: 2rem;">
                    <button type="submit" class="btn btn-success">💾 Save All Settings</button>
                    <button type="button" class="btn btn-secondary" onclick="location.reload()">🔄 Reset Form</button>
                </div>
            </form>
        </div>

        <!-- Cache Management -->
        <div class="settings-card">
            <h2>🗂️ Cache Management</h2>
            
            <div class="info-box">
                API responses are cached to improve performance and reduce API usage. 
                Clear the cache if you're experiencing issues or want to refresh data.
            </div>
            
            <form method="POST" style="display: inline;">
                <input type="hidden" name="action" value="clear_cache">
                <button type="submit" class="btn btn-warning" onclick="return confirm('Are you sure you want to clear all API cache?')">
                    🗑️ Clear API Cache
                </button>
            </form>
        </div>

        <!-- Configuration File Status -->
        <div class="settings-card">
            <h2>📋 Configuration Status</h2>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem;">
                <div>
                    <h4>📁 File Locations</h4>
                    <p><strong>Config